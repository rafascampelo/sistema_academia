<?php
// Arquivo: aluno_crud.php
session_start();
require_once 'backend/core/conexao.php';
require_once 'backend/core/auth_functions.php'; 
// E os CRUDS (se for o caso)
require_once 'backend/class/Aluno.class.php';
// 1. AUTORIZAÃ‡ÃƒO: SÃ³ permite acesso se for ADM!
if (!is_adm()) {
    // Se nÃ£o for ADM, redireciona ou mostra erro 403
    header('Location: index.php?error=acesso_negado');
    exit();
}

// 2. Cria a instÃ¢ncia da classe CRUD (Objeto)
$crud = new AlunoCRUD();
$mensagem = '';
$action = $_GET['action'] ?? 'list'; // AÃ§Ã£o padrÃ£o Ã© listar
$aluno_data = null; // Para formulÃ¡rios de ediÃ§Ã£o

// 3. Processamento das RequisiÃ§Ãµes (Requisito: POST/GET e InclusÃ£o/ExclusÃ£o/AlteraÃ§Ã£o)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // ðŸš¨ VALIDAÃ‡ÃƒO DE DADOS (Requisito do professor)
    $dados = $_POST;
    
    // ValidaÃ§Ã£o de campos obrigatÃ³rios (Simples)
    if (empty($dados['nome_aluno']) || empty($dados['plano_pag'])) {
        $mensagem = 'Erro: Nome e Plano de Pagamento sÃ£o obrigatÃ³rios.';
    } else {
        // Formata os dados para o mÃ©todo CRUD
        $dados_crud = [
            'nome_aluno' => $dados['nome_aluno'],
            'plano_pag'  => $dados['plano_pag'],
            'idade'      => $dados['idade'] ?? null,
            'telefone'   => $dados['telefone'] ?? null,
            'cpf'        => $dados['cpf'] ?? null,
            'email'      => $dados['email'] ?? null,
            'Data_matricula' => $dados['Data_matricula'] ?? null,
        ];
        
        // Verifica se Ã© AlteraÃ§Ã£o (UPDATE) ou InclusÃ£o (CREATE)
        if (isset($dados['cod_aluno']) && !empty($dados['cod_aluno'])) {
            // AÃ§Ã£o de AlteraÃ§Ã£o
            if ($crud->atualizar($dados['cod_aluno'], $dados_crud)) {
                $mensagem = 'Aluno alterado com sucesso!';
            } else {
                $mensagem = 'Erro ao alterar aluno.';
            }
        } else {
            // AÃ§Ã£o de InclusÃ£o
            if ($crud->inserir($dados_crud)) {
                $mensagem = 'Aluno cadastrado com sucesso!';
            } else {
                $mensagem = 'Erro ao cadastrar aluno.';
            }
        }
        // Redireciona para evitar reenvio do formulÃ¡rio
        header('Location: aluno_crud.php?mensagem=' . urlencode($mensagem));
        exit();
    }
}

// 4. Processamento das AÃ§Ãµes GET (Excluir e Editar)
if (isset($_GET['mensagem'])) {
    $mensagem = $_GET['mensagem'];
}

if ($action === 'delete' && isset($_GET['id'])) {
    // Requisito: ExclusÃ£o de registros
    if ($crud->excluir($_GET['id'])) {
        $mensagem = 'Aluno excluÃ­do com sucesso!';
    } else {
        $mensagem = 'Erro ao excluir aluno.';
    }
    header('Location: aluno_crud.php?mensagem=' . urlencode($mensagem));
    exit();
}

if ($action === 'edit' && isset($_GET['id'])) {
    // Preenche o formulÃ¡rio para AlteraÃ§Ã£o
    $aluno_data = $crud->buscarPorId($_GET['id']);
}

// 5. LISTAGEM e RENDERIZAÃ‡ÃƒO
$alunos = $crud->listarTodos();

?>
<?php require_once 'views/aluno_list.view.php'; ?>